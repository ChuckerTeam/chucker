buildscript {
    ext {
        kotlinVersion = '1.8.21'
        androidGradleVersion = '8.0.0'
        coroutineVersion = '1.7.1'

        // Google libraries
        activityVersion = '1.7.1'
        appCompatVersion = '1.6.1'
        constraintLayoutVersion = '2.1.4'
        materialComponentsVersion = '1.8.0'
        fragmentVersion = '1.5.7'
        roomVersion = '2.5.1'
        lifecycleVersion = '2.6.1'
        androidXCoreVersion = '2.2.0'
        paletteKtxVersion = '1.0.0'

        // Networking
        brotliVersion = '0.1.2'
        gsonVersion = '2.10.1'
        okhttpVersion = '4.11.0'
        retrofitVersion = '2.9.0'
        wireVersion = '4.5.6'

        // Debug and quality control
        binaryCompatibilityValidator = '0.13.1'
        detektVersion = '1.22.0'
        ktLintGradleVersion = '11.3.2'
        leakcanaryVersion = '2.10'

        // Apollo
        apolloVersion = '3.8.1'

        // Testing
        androidxTestCoreVersion = '1.5.0'
        junitGradlePluignVersion = '1.8.2.1'
        junitVersion = '5.9.3'
        junit4Version = '4.13.2'
        mockkVersion = '1.13.5'
        robolectricVersion = '4.10'
        truthVersion = '1.1.3'
        androidXTestRunner = '1.5.2'
        androidXTestRules = '1.5.0'
        androidXTestExt = '1.1.5'

        // Publishing
        nexusStagingPlugin = '0.30.0'
    }

    repositories {
        google()
        gradlePluginPortal()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$androidGradleVersion"
        classpath "de.mannodermaus.gradle.plugins:android-junit5:$junitGradlePluignVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.apollographql.apollo3:apollo-gradle-plugin:$apolloVersion"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detektVersion"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:$ktLintGradleVersion"
        classpath "org.jetbrains.kotlinx:binary-compatibility-validator:$binaryCompatibilityValidator"
        classpath "com.squareup.wire:wire-gradle-plugin:$wireVersion"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:$nexusStagingPlugin"
    }
}
apply plugin: 'binary-compatibility-validator'
apply plugin: 'io.codearte.nexus-staging'

apiValidation {
    ignoredProjects += ["sample"]
    ignoredPackages += [
            "com.chuckerteam.chucker.internal",
            "com.chuckerteam.chucker.databinding"
    ]
}

allprojects {
    version = VERSION_NAME
    group = GROUP

    repositories {
        google()
        mavenCentral()
    }

    tasks.withType(Test) {
        testLogging {
            events "skipped", "failed", "passed"
        }
    }
}

task installGitHook(type: Copy) {
    from new File(rootProject.rootDir, 'pre-commit')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0777
}

task clean(type: Delete) {
    dependsOn(installGitHook)
    delete rootProject.buildDir
}

ext {
    minSdkVersion = 21
    targetSdkVersion = 33
    compileSdkVersion = 33
}

nexusStaging {
    username = findProperty("NEXUS_USERNAME")
    password = findProperty("NEXUS_PASSWORD")
    stagingProfileId = "ea09119de9f4"
}
