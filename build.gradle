buildscript {
    ext {
        kotlinVersion = '1.6.21'
        androidGradleVersion = '7.4.2'
        coroutineVersion = '1.5.2'

        // Google libraries
        activityVersion = '1.5.1'
        appCompatVersion = '1.2.0'
        constraintLayoutVersion = '1.1.3'
        materialComponentsVersion = '1.2.1'
        roomVersion = '2.4.3'
        fragmentVersion = '1.5.1'
        lifecycleVersion = '2.5.1'
        androidXArchTestVersion = '2.0.0'
        paletteKtxVersion = '1.0.0'
        jsonhandleviewVersion = '1.2.3'

        // Networking
        brotliVersion = '0.1.2'
        gsonVersion = '2.8.6'
        okhttpVersion = '4.9.0'
        retrofitVersion = '2.9.0'
        wireVersion = '4.1.0'

        // Debug and quality control
        binaryCompatibilityValidator = '0.8.0'
        detektVersion = '1.14.0'
        dokkaVersion = '1.4.10.2'
        ktLintVersion = '0.39.0'
        ktLintGradleVersion = '10.0.0'
        leakcanaryVersion = '2.9.1'

        // Testing
        androidxTestCoreVersion = '1.3.0'
        junitGradlePluignVersion = '1.6.1.0'
        junitVersion = '5.5.2'
        mockkVersion = '1.10.2'
        robolectricVersion = '4.4'
        truthVersion = '1.1'
        vintageJunitVersion = '4.12'

        //jfrog publish
        jfrogExtractor = '4.28.3'
    }

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$androidGradleVersion"
        classpath "de.mannodermaus.gradle.plugins:android-junit5:$junitGradlePluignVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaVersion"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detektVersion"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:$ktLintGradleVersion"
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:$jfrogExtractor"
        classpath "org.jetbrains.kotlinx:binary-compatibility-validator:$binaryCompatibilityValidator"
        classpath "com.squareup.wire:wire-gradle-plugin:$wireVersion"
    }
}

allprojects {
    apply plugin: "com.jfrog.artifactory"
    apply plugin: "maven-publish"

    version = VERSION_NAME
    group = GROUP

    repositories {
        google()
        mavenCentral()

        def jfrogArtifactoryUrl = project.properties["JFROG_ARTIFACTORY_URL"]
        def jfrogArtifactoryUserName = project.properties["JFROG_ARTIFACTORY_USERNAME"]
        def jfrogArtifactoryKey = project.properties["JFROG_ARTIFACTORY_KEY"]
        maven {
            url "${jfrogArtifactoryUrl}/${project.properties["RELEASE_REPO_NAME"]}"
            credentials {
                username = jfrogArtifactoryUserName
                password = jfrogArtifactoryKey
            }
        }
        maven {
            url "${jfrogArtifactoryUrl}/${project.properties["SNAPSHOT_REPO_NAME"]}"
            credentials {
                username = jfrogArtifactoryUserName
                password = jfrogArtifactoryKey
            }
        }
    }

    tasks.withType(Test) {
        testLogging {
            events "skipped", "failed", "passed"
        }
    }
}

task installGitHook(type: Copy) {
    from new File(rootProject.rootDir, 'pre-commit')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0777
}

task clean(type: Delete) {
    dependsOn(installGitHook)
    delete rootProject.buildDir
}

ext {
    minSdkVersion = 21
    targetSdkVersion = 31
    compileSdkVersion = 31
}

