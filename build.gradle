buildscript {
    ext {
        kotlinVersion = '1.4.32'
        androidGradleVersion = '4.1.3'
        coroutineVersion = '1.4.2'

        // Google libraries
        activityVersion = '1.2.2'
        appCompatVersion = '1.2.0'
        constraintLayoutVersion = '2.0.4'
        materialComponentsVersion = '1.3.0'
        roomVersion = '2.2.6'
        fragmentVersion = '1.3.2'
        lifecycleVersion = '2.3.1'
        androidXCoreVersion = '2.1.0'
        paletteKtxVersion = '1.0.0'

        // Networking
        gsonVersion = '2.8.6'
        okhttpVersion = '4.9.1'
        retrofitVersion = '2.9.0'
        wireVersion = '3.7.0'

        // Debug and quality control
        binaryCompatibilityValidator = '0.5.0'
        detektVersion = '1.14.0'
        dokkaVersion = '1.4.30'
        ktLintVersion = '0.40.0'
        ktLintGradleVersion = '9.4.1'
        leakcanaryVersion = '2.7'

        // Testing
        androidxTestCoreVersion = '1.3.0'
        junitGradlePluignVersion = '1.7.0.0'
        junitVersion = '5.7.1'
        mockkVersion = '1.11.0'
        robolectricVersion = '4.4'
        truthVersion = '1.1.2'
        vintageJunitVersion = '4.13'
    }

    repositories {
        google()
        gradlePluginPortal()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$androidGradleVersion"
        classpath "de.mannodermaus.gradle.plugins:android-junit5:$junitGradlePluignVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaVersion"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detektVersion"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:$ktLintGradleVersion"
        classpath "org.jetbrains.kotlinx:binary-compatibility-validator:$binaryCompatibilityValidator"
        classpath "com.squareup.wire:wire-gradle-plugin:$wireVersion"
    }
}
apply plugin: 'binary-compatibility-validator'

apiValidation {
    ignoredProjects += ["sample"]
    ignoredPackages += [
            "com.chuckerteam.chucker.internal",
            "com.chuckerteam.chucker.databinding"
    ]
}

allprojects {
    version = VERSION_NAME
    group = GROUP

    repositories {
        google()
        mavenCentral()
        jcenter {
            content {
                includeModule("org.jetbrains.trove4j", "trove4j")
                includeModule("org.jetbrains.kotlinx", "kotlinx-html-jvm")
            }
        }
    }

    tasks.withType(Test) {
        testLogging {
            events "skipped", "failed", "passed"
        }
    }
}

task installGitHook(type: Copy) {
    from new File(rootProject.rootDir, 'pre-commit')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0777
}

task clean(type: Delete) {
    dependsOn(installGitHook)
    delete rootProject.buildDir
}

ext {
    minSdkVersion = 21
    targetSdkVersion = 30
    compileSdkVersion = 30
}
