apply plugin: 'maven-publish'
apply plugin: 'signing'

group = GROUP
version = VERSION_NAME

publishing {
    repositories {
        maven {
            name "snapshot"
            url = "https://s01.oss.sonatype.org/content/repositories/snapshots"
            credentials {
                username = findProperty("NEXUS_USERNAME")
                password = findProperty("NEXUS_PASSWORD")
            }
        }
        maven {
            name "staging"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = findProperty("NEXUS_USERNAME")
                password = findProperty("NEXUS_PASSWORD")
            }
        }
    }
    publications {
        release(MavenPublication) {
            afterEvaluate {
                from components.release
            }
            artifactId = project.name
            pom {
                name = POM_REPO_NAME
                description = POM_DESCRIPTION
                url = POM_URL
                licenses {
                    license {
                        name = POM_LICENSE_NAME
                        url = POM_LICENSE_URL
                    }
                }
                scm {
                    connection = POM_SCM_CONNECTION
                    developerConnection = POM_SCM_CONNECTION
                    url = POM_URL
                }
                developers {
                    developer {
                        id = 'rohitjakhar'
                        name = 'Rohit Jakhar'
                        email = 'rohitjakhar940@gmail.com'
                    }
                }
            }
        }
    }
}

def signingKey = findProperty("SIGNING_KEY")
def signingPwd = findProperty("SIGNING_PWD")
if (signingKey && signingPwd) {
    signing {
        useInMemoryPgpKeys(signingKey, signingPwd)
        sign publishing.publications.release
    }
} else {
    logger.info("Signing Disable as the PGP key was not found")
}
