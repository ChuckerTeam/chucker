apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.dokka-android'

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        versionName VERSION_NAME
        versionCode VERSION_CODE.toInteger()
        consumerProguardFiles 'proguard-rules.pro'
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"

    includeNonPublic = false
    reportUndocumented = true
    skipEmptyPackages = true

    packageOptions {
        prefix = "com.chuckerteam.chucker.internal"
        suppress = true
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

def dokka = tasks['dokka']

task javadocJar(type: Jar, dependsOn: dokka) {
    classifier = 'javadoc'
    from dokka.outputDirectory
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttp3Version"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"

    implementation "android.arch.persistence.room:runtime:$roomVersion"
    kapt "android.arch.persistence.room:compiler:$roomVersion"
}

apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
