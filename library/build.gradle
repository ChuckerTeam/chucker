apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.dokka'

android {
    compileSdkVersion rootProject.compileSdkVersion

    compileOptions {
        kotlinOptions.freeCompilerArgs += ['-module-name', "com.github.ChuckerTeam.Chucker.library"]
    }

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        versionName VERSION_NAME
        versionCode VERSION_CODE.toInteger()
        consumerProguardFiles 'proguard-rules.pro'
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    viewBinding {
        enabled = true
    }
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"

    configuration {
        includeNonPublic = false
        reportUndocumented = true
        skipEmptyPackages = true

        perPackageOption {
            prefix = "com.chuckerteam.chucker.internal"
            suppress = true
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

def dokka = tasks['dokka']

task javadocJar(type: Jar, dependsOn: dokka) {
    archiveClassifier.set('javadoc')
    from dokka.outputDirectory
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    implementation "com.google.android.material:material:$materialComponentsVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttp3Version"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp3Version"
    testImplementation "androidx.arch.core:core-testing:$androidXCore"
}

apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
apply from: rootProject.file('gradle/kotlin-static-analysis.gradle')
